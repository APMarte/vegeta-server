// Code generated by go-swagger; DO NOT EDIT.

package attack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "vegeta-server/models"
)

// GetAttackByIDOKCode is the HTTP code returned for type GetAttackByIDOK
const GetAttackByIDOKCode int = 200

/*GetAttackByIDOK Success

swagger:response getAttackByIdOK
*/
type GetAttackByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.AttackResponse `json:"body,omitempty"`
}

// NewGetAttackByIDOK creates GetAttackByIDOK with default headers values
func NewGetAttackByIDOK() *GetAttackByIDOK {

	return &GetAttackByIDOK{}
}

// WithPayload adds the payload to the get attack by Id o k response
func (o *GetAttackByIDOK) WithPayload(payload *models.AttackResponse) *GetAttackByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get attack by Id o k response
func (o *GetAttackByIDOK) SetPayload(payload *models.AttackResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAttackByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAttackByIDInternalServerErrorCode is the HTTP code returned for type GetAttackByIDInternalServerError
const GetAttackByIDInternalServerErrorCode int = 500

/*GetAttackByIDInternalServerError Internal Server Error

swagger:response getAttackByIdInternalServerError
*/
type GetAttackByIDInternalServerError struct {
}

// NewGetAttackByIDInternalServerError creates GetAttackByIDInternalServerError with default headers values
func NewGetAttackByIDInternalServerError() *GetAttackByIDInternalServerError {

	return &GetAttackByIDInternalServerError{}
}

// WriteResponse to the client
func (o *GetAttackByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
