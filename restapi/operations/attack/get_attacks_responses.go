// Code generated by go-swagger; DO NOT EDIT.

package attack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "vegeta-server/models"
)

// GetAttacksOKCode is the HTTP code returned for type GetAttacksOK
const GetAttacksOKCode int = 200

/*GetAttacksOK Success

swagger:response getAttacksOK
*/
type GetAttacksOK struct {

	/*
	  In: Body
	*/
	Payload models.AttackResponseList `json:"body,omitempty"`
}

// NewGetAttacksOK creates GetAttacksOK with default headers values
func NewGetAttacksOK() *GetAttacksOK {

	return &GetAttacksOK{}
}

// WithPayload adds the payload to the get attacks o k response
func (o *GetAttacksOK) WithPayload(payload models.AttackResponseList) *GetAttacksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get attacks o k response
func (o *GetAttacksOK) SetPayload(payload models.AttackResponseList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAttacksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.AttackResponseList, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAttacksInternalServerErrorCode is the HTTP code returned for type GetAttacksInternalServerError
const GetAttacksInternalServerErrorCode int = 500

/*GetAttacksInternalServerError Internal Server Error

swagger:response getAttacksInternalServerError
*/
type GetAttacksInternalServerError struct {
}

// NewGetAttacksInternalServerError creates GetAttacksInternalServerError with default headers values
func NewGetAttacksInternalServerError() *GetAttacksInternalServerError {

	return &GetAttacksInternalServerError{}
}

// WriteResponse to the client
func (o *GetAttacksInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
